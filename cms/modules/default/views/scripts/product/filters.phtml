<h2>Zaawansowane kryteria wyszukiwania - <?=$this->sectionName;?></h2>
<div>
	Wybierz lokację
	<ul class="qs-cat-ls">
		<?php foreach ($this->categories as $category): ?>
			<li>
				<a id="qs_cat_open_<?php echo $category->getId(); ?>" class="qs-cat-open" href="#<?php echo $category->getName(); ?>"
				   title="Wybierz lokacje"><?php echo $category->getName(); ?></a>
				<ul id="qs_cat_ls_<?php echo $category->getId(); ?>" class="qs-cat-all">
					<li>
						<?php $id = $category->getId();
						$name = $category->getName(); ?>
						<input type="checkbox" id="qs_cat_<?php echo $id; ?>"
							   value="<?php echo $id; ?>" name="<?php echo $name; ?>"/>
						<label for="qs_cat_<?php echo $id; ?>"><strong><?php echo $name; ?></strong></label>
						<ul class="qs-subcat-ls">
							<?php foreach ($category->getChildren() as $child): ?>
	                            <?php $id = $child->getId();
								    $name = $child->getName(); ?>
								<li>
									<input type="checkbox" id="qs_cat_<?php echo $id; ?>"
										   value="<?php echo $id; ?>" name="<?php echo $name; ?>"
										   <?php echo isset($this->filters['categories']) && isset($this->filters['categories'][$id]) ? 'checked="checked"' : ''; ?>/>
									<label for="qs_cat_<?php echo $id; ?>"><?php echo $name; ?></label>
								</li>
	                        <?php endforeach; ?>
						</ul>
					</li>
				</ul>
			</li>
	    <?php endforeach; ?>
	</ul>
	lub zacznij wpisywać
	<div id="textboxlist"></div>
</div>
<form name="quick-search-form" method="GET" action="<?php echo $this->baseUrl('json/products/autocomplete'); ?>">
	<div id="price-block-input">
		<label>Cena: <input id="price_min" class="small" type="text" name="price_min" value="<?php echo isset($this->filters['priceMin']) ? $this->filters['priceMin'] : $this->priceMin; ?>"/></label>
		<label> do <input id="price_max" class="small" type="text" name="price_max" value="<?php echo isset($this->filters['priceMax']) ? $this->filters['priceMax'] : $this->priceMax; ?>"/></label>
		<p><a href="#price-slider">Lub użyj suwaka &raquo;</a></p>
	</div>
	<div id="price-block-slider">
		<label>Cena:</label> <span id="price-range"><?php echo isset($this->filters['priceMin']) ? $this->filters['priceMin'] : $this->priceMin; ?>
		- <?php echo isset($this->filters['priceMax']) ? $this->filters['priceMax'] : $this->priceMax; ?></span>
		<div id="price-slider"></div>
		<p><a href="#price-slider">Lub wpisz dokładne wartości &raquo;</a></p>
	</div>
	<div>Ilość pokoi
		<input class="small" type="text" name="rooms_min" value="<?php echo isset($this->filters['roomsMin']) ? $this->filters['roomsMin'] : ''; ?>"/>
		 do <input class="small" type="text" name="rooms_max" value="<?php echo isset($this->filters['roomsMax']) ? $this->filters['roomsMax'] : ''; ?>"/>
	</div>
	<div>Typ zabudowy
		<?php foreach($this->subtypes as $subtypeValue => $subtypeName): ?>
			<label><input name="sub[]" type="checkbox" value="<?=$subtypeValue;?>"
			<?php echo isset($this->filters['subtype']) && isset($this->filters['subtype'][$subtypeValue]) ? 'checked="checked"' : ''; ?>/>
			 <?=$subtypeName;?></label>
		<?php endforeach;?>
	</div>
	<div>Powierzchnia (m2)
		<input class="small" type="text" name="area_min" value="<?php echo isset($this->filters['areaMin']) ? $this->filters['areaMin'] : ''; ?>"/>
		 do <input class="small" type="text" name="area_max" value="<?php echo isset($this->filters['areaMax']) ? $this->filters['areaMax'] : ''; ?>"/>
	</div>
	<div>Piętro
		<input class="small" type="text" name="floor_min" value="<?php echo isset($this->filters['floorMin']) ? $this->filters['floorMin'] : ''; ?>"/>
		 do <input class="small" type="text" name="floor_max" value="<?php echo isset($this->filters['floorMax']) ? $this->filters['floorMax'] : ''; ?>"/>
	</div>
	<div>Parametry dodatkowe
		<?php foreach($this->params as $parameter):?>
			<label><input type="checkbox" name="p[]" value="<?=$parameter->getId();?>"
			<?php echo isset($this->filters['params']) && isset($this->filters['params'][$parameter->getId()]) ? 'checked="checked"' : ''; ?>/>
			 <?=$parameter->getName();?></label>
		<?php endforeach;?>
	</div>
</form>
<h2 class="quick-search-results">Ofert: <span><?=$this->totalCount;?></span>
	<a id="quick-search-submit" href="<?=$this->baseUrl($this->searchUrl);?>">pokaz wyniki</a>
</h2>
<script type="text/javascript">
	var timer;
	function delayFunction(callback, delay) {
		if (timer) {
			window.clearTimeout(timer);
		}
		timer = window.setTimeout( function() {
			timer = null;
			callback();
		}, delay );
	}
	$(function(){
		function changeCategory(cat) {
			if(cat.checked) {
				tl.add(cat.name,cat.value);
			} else {
				tl.findBit(cat.value).remove();
			}
		}
		$('.qs-subcat-ls>li>input:checkbox').change(function(){
			changeCategory(this);
		});
		$('.qs-cat-all>li>input:checkbox').change(function(){
			var input = this;
			$('li>input:checkbox', $(this).siblings('ul')).each(function() {
				if(this.checked != input.checked) {
					this.checked = input.checked;
					changeCategory(this);
				}
			});
		});
		tl = new $.TextboxList('#textboxlist', {
			unique: true,
			bitsOptions: {
				editable: {
					growing: false
				}
			},
			plugins: {
				autocomplete: {
					placeholder: 'Zacznij wpisywać aby uzyskać podpowiedź',
					minLength: 3,
					onlyFromValues: true,
					queryRemote: true,
					remote: {
						url: '<?=$this->baseUrl('json/categories/autocomplete');?>'
					}
				}
			}
		});
		tl.addEvent('bitRemove', function(bit){
			var id = bit.getValue()[0];
			$('#qs_cat_' + id).attr('checked', false);
			submitQuickSearch();
		});
		tl.addEvent('bitAdd', function(bit){
			if(bit.type == 'box') {
				$('#qs_cat_' + bit.getValue()[0]).attr('checked', true);
				submitQuickSearch();
			}
			
		});

		var quickSearchRequest;
		function submitQuickSearch() {
			delayFunction(sendQuickSearch, 500);
		}
        function buildQSQuery() {
            var query = ['t=<?=$this->type;?>',
                         's=<?=$this->section;?>'];
			var price_min = parseInt($('input[name="price_min"]').val());
			if (price_min) {
				query.push('pmin=' + price_min);
			}
			var price_max = parseInt($('input[name="price_max"]').val());
			if (price_max) {
				query.push('pmax=' + price_max);
			}
			var rooms_min = parseInt($('input[name="rooms_min"]').val());
			if (rooms_min) {
				query.push('rmin=' + rooms_min);
			}
			var rooms_max = parseInt($('input[name="rooms_max"]').val());
			if (rooms_max) {
				query.push('rmax=' + rooms_max);
			}
			// lokacje
			$(tl.getValues()).each(function(){
				query.push('c[]=' + this[0]);
			});
			// typ zabudowy
			var subtypes = $('input:checked[name="sub[]"]').serialize();
			if(subtypes) {
				query.push(subtypes);
			}
			// powierzchnia
			var area_min = parseInt($('input[name="area_min"]').val());
			if (area_min) {
				query.push('amin=' + area_min);
			}
			var area_max = parseInt($('input[name="area_max"]').val());
			if (area_max) {
				query.push('amax=' + area_max);
			}
			// pietro
			var floor_min = parseInt($('input[name="floor_min"]').val());
			if (floor_min) {
				query.push('fmin=' + floor_min);
			}
			var floor_max = parseInt($('input[name="floor_max"]').val());
			if (floor_max) {
				query.push('fmax=' + floor_max);
			}
			// parametry dodatkowe
			var params = $('input:checked[name="p[]"]').serialize();
			if(params) {
				query.push(params);
			}
			
			query = query.join('&');
            return query;
        }

		function sendQuickSearch() {
			if(quickSearchRequest){
				quickSearchRequest.abort();
			}
			var query = buildQSQuery();
			quickSearchRequest = $.get('<?=$this->baseUrl('json/products/quicksearch');?>?' + query, function(data) {
				$('.quick-search-results>span').html(data);
			});

		}
		
		$('input', 'form[name="quick-search-form"]').keyup(function(){
			submitQuickSearch();
		});
		$('input[type="checkbox"]', 'form[name="quick-search-form"]').change(function(){
			submitQuickSearch();
		});

		$( ".qs-cat-all" ).dialog({
			title: 'Wybierz dzielnice',
			autoOpen: false,
			//draggable: false,
			//resizable: false,
			height: 350,
			width: 400,
			modal: false
		});
		$('.qs-cat-open').click(function(){
			$('#' + this.id.replace('_open_', '_ls_')).dialog('open');
			return false;
		});
        $('#quick-search-submit').click(function(){
            var query = [['t', '<?=$this->type;?>'],
                         ['s', '<?=$this->section;?>']];
			var price_min = parseInt($('input[name="price_min"]').val());
			if (price_min) {
				query.push(['pmin', price_min]);
			}
			var price_max = parseInt($('input[name="price_max"]').val());
			if (price_max) {
				query.push(['pmax', price_max]);
			}
			var rooms_min = parseInt($('input[name="rooms_min"]').val());
			if (rooms_min) {
				query.push(['rmin', rooms_min]);
			}
			var rooms_max = parseInt($('input[name="rooms_max"]').val());
			if (rooms_max) {
				query.push(['rmax', rooms_max]);
			}
			// lokacje
			$(tl.getValues()).each(function(){
				query.push(['c[]', this[0]]);
			});

			// typ zabudowy
			$('input:checked[name="sub[]"]').each(function(){
				query.push(['sub[]', $(this).val()]);
			});
			// powierzchnia
			var area_min = parseInt($('input[name="area_min"]').val());
			if (area_min) {
				query.push(['amin', area_min]);
			}
			var area_max = parseInt($('input[name="area_max"]').val());
			if (area_max) {
				query.push(['amax', area_max]);
			}
			// pietro
			var floor_min = parseInt($('input[name="floor_min"]').val());
			if (floor_min) {
				query.push(['fmin', floor_min]);
			}
			var floor_max = parseInt($('input[name="floor_max"]').val());
			if (floor_max) {
				query.push(['fmax', floor_max]);
			}
			// parametry dodatkowe
			$('input:checked[name="p[]"]').each(function(){
				query.push(['p[]', $(this).val()]);
			});
			var url = $(this).attr('href');
            post_to_url(url, query);
            return false;
        });

		// slider
		$('#price-block-slider a').click(function(){
			$('#price-block-slider').css('display', 'none');
			$('#price-block-input').css('display', 'block');
			return false;
		});
		$('#price-block-input a').click(function(){
			$('#price-block-input').css('display', 'none');
			$('#price-block-slider').css('display', 'block');
			return false;
		});
		$('#price_min, #price_max').change(function(){
			$('#price-slider').slider('option', 'values', [$('#price_min').val(), $('#price_max').val()]);
		});
		$('#price-slider').slider({
			range: true,
			min: <?=$this->priceMin;?>,
			max: <?=$this->priceMax;?>,
			step: <?=$this->priceStep;?>,
			values: [<?php echo isset($this->filters['priceMin']) ? $this->filters['priceMin'] : $this->priceMin; ?>,
					<?php echo isset($this->filters['priceMax']) ? $this->filters['priceMax'] : $this->priceMax; ?> ],
			change: function(event, ui) {
				$('#price_min').val(ui.values[0]);
				$('#price_max').val(ui.values[1]);
				$('#price-range').html(ui.values[0] + ' - ' + ui.values[1]);
			},
			slide: function(event, ui) {
				$('#price_min').val(ui.values[0]);
				$('#price_max').val(ui.values[1]);
				$('#price-range').html(ui.values[0] + ' - ' + ui.values[1]);
				submitQuickSearch();
			}
		});

		// init categories
		$('.qs-subcat-ls>li>input:checked').change();
	});
</script>